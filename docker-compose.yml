version: "3.8"

services:
  frontend:
    image: starmoon-frontend
    pull_policy: never
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_ENV=local
        - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
        - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
        - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
        # - OPENAI_API_KEY=${OPENAI_API_KEY} 

        # - NEXT_PUBLIC_CMS_URL=${NEXT_PUBLIC_CMS_URL}
        # - NEXT_PUBLIC_FRONTEND_URL=${NEXT_PUBLIC_FRONTEND_URL}
        # - NEXT_PUBLIC_AUTH_MODES=${NEXT_PUBLIC_AUTH_MODES}
    container_name: web
    depends_on:
      - backend-core
    restart: always
    environment:
      - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
      - NEXT_PUBLIC_SUPABASE_URL=http://localhost:54321
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0

    ports:
      - 3000:3000

  backend-core:
    image: starmoon/starmoon-backend:latest
    pull_policy: if_not_present
    env_file:
      - .env
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: backend-core
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # healthcheck:
    #   test: [ "CMD", "curl", "http://localhost:8000/healthz" ]
    command:
      - "poetry"
      - "run"
      - "uvicorn"
      - "app.main:app"
      - "--host"
      - "0.0.0.0"
      - "--port"
      - "8000"
      - "--ws-ping-interval"
      - "600"
      - "--ws-ping-timeout"
      - "600"
    restart: always
    volumes:
      - ./backend/:/app/
    ports:
      - 8000:8000

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - 6379:6379

  worker:
    pull_policy: if_not_present
    image: starmoon/starmoon-backend:latest
    env_file:
      - .env
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: worker
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: poetry run celery -A app.celery.worker.celery_app worker -l info
    restart: always
    depends_on:
      - redis

  beat:
    image: starmoon/starmoon-backend:latest
    pull_policy: if_not_present
    env_file:
      - .env
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: beat
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: poetry run celery -A app.celery.worker.celery_app beat -l info
    restart: always
    depends_on:
      - redis

  flower:
    image: starmoon/starmoon-backend:latest
    pull_policy: if_not_present
    env_file:
      - .env
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: flower
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: poetry run celery -A app.celery.worker.celery_app flower -l info --port=5555
    restart: always
    depends_on:
      - redis
      - worker
      - beat
    ports:
      - 5555:5555
